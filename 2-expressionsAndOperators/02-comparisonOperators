// Equality
'3' == 3;  // True despite one string and one number three.  Ignores type and only looks at value to determine booleon

//Strict equality operator

'3' === 3;  // false because it looks at types:  strings and numbers, must be the same

// Opposite operator

'3' != 3; // false

'3' !==  3;  // true 

// Greater than

3 > 4; // false

// Less then 

3 < 4; //true

//  greater than or equal too

3 >= 4; // false

// less then or equal to

3 <= 4 // true

// AND operator evaluation both have to be true or false

Let x = 13;
x >= 5 && <=33;

// OR operator one or the other can be true or false

x > 3 || x == -3

//

let y = 1
y <=8 && y !-- 5




